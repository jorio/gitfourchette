[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gitfourchette"
dynamic = ["version"]  # see [tool.setuptools.dynamic]
description = "The comfortable Git UI"
keywords = ["git"]
authors = [
    {name = "Iliyas Jorio"},
]
classifiers = [
    "Topic :: Software Development :: Version Control :: Git",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Developers",
]
readme = "README.md"
requires-python = ">= 3.10"
dependencies = [
    # pygit2 1.15.1 is strongly recommended to be able to use all features,
    # but we're maintaining backwards compatibility with 1.14.1 for now.
    "pygit2 >= 1.14.1",
]

[project.urls]
Homepage = "https://gitfourchette.org"
Documentation = "https://gitfourchette.org/guide"
Repository = "https://github.com/jorio/gitfourchette"
Issues = "https://github.com/jorio/gitfourchette/issues"
Changelog = "https://github.com/jorio/gitfourchette/blob/master/CHANGELOG.md"

[project.gui-scripts]
gitfourchette = "gitfourchette.__main__:main"

[project.optional-dependencies]
test = ["pytest", "pytest-qt", "pytest-cov", "pytest-xdist", "ruff"]
pyqt6 = ["pyqt6"]
pyqt5 = ["pyqt5"]
pyside6 = ["PySide6 >= 6.9"]
pygments = ["pygments >= 2.12"]  # syntax highlighting
memory-indicator = ["psutil"]

[tool.setuptools]
package-dir = {gitfourchette = "gitfourchette"}
package-data = {"gitfourchette.assets" = ['**']}
exclude-package-data = {"gitfourchette.assets" = ['lang/*.po', 'lang/*.pot', '**/README.md']}

[tool.setuptools.dynamic]
version = {attr = "gitfourchette.appconsts.APP_VERSION"}

#------------------------------------------------------------------------------
# Tests

[pytest]
# Qt binding used by default for pytest configurations in PyCharm
# (including single-test configs generated by clicking the green arrow in the gutter).
# To override, set the PYTEST_QT_API environment variable.
qt_api = "pyqt6"

#------------------------------------------------------------------------------
# Coverage

[tool.coverage.run]
source = [
    "gitfourchette/",
]

omit = [
    "gitfourchette/__main__.py",
    "gitfourchette/pycompat.py",
    "gitfourchette/qt.py",
    "gitfourchette/toolbox/excutils.py",  # uncaught exception formatters (shouldn't be needed if all tests pass!)
    "gitfourchette/toolbox/benchmark.py",
    "gitfourchette/toolbox/memoryindicator.py",
    "gitfourchette/toolbox/qbusyspinner.py",
    "gitfourchette/forms/ui_*.py",  # pyuic generated code
]

[tool.coverage.report]
precision = 1
skip_covered = false  # don't report files that are 100% covered
skip_empty = true  # skip files without executable code like __init__.py

# Regexes for lines to exclude from consideration
exclude_lines = [
    # We're overriding the defaults, so add them back
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "assert False",
    "warnings.warn\\(",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if not TEST_MODE:",
    "if not settings.TEST_MODE:",
    "if APP_FREEZE_.+:",
    "if MACOS:",
    "if WINDOWS:",
    "if FLATPAK:",
    "if not BRANCH_FOLDERS:",
    "if not pygit2_version_at_least\\(",
    "if qtIsNativeMacosStyle\\(",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage_html_report"

[tool.ruff.lint]
extend-select = ['W', 'E', 'F', 'C', 'N9', 'B', 'U']
# E203: whitespace before ':'
# E221: multiple spaces before operator
# E501: line too long
# F403: star imports
# F405: star imports
# C901: too complex
ignore = ['E203', 'E221', 'E501', 'F403', 'F405', 'C901', 'B028']
exclude = ['gitfourchette/forms/ui_*.py']

[tool.ruff.lint.per-file-ignores]
'gitfourchette/porcelain.py' = ['F401']
'gitfourchette/qt.py' = ['F401']
'**/__init__.py' = ['F401']
