# Form implementation generated from reading ui file 'resetheaddialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from gitfourchette.localization import *
from gitfourchette.qt import *


class Ui_ResetHeadDialog(object):
    def setupUi(self, ResetHeadDialog):
        ResetHeadDialog.setObjectName("ResetHeadDialog")
        ResetHeadDialog.resize(600, 325)
        self.gridLayout = QGridLayout(ResetHeadDialog)
        self.gridLayout.setHorizontalSpacing(0)
        self.gridLayout.setVerticalSpacing(20)
        self.gridLayout.setObjectName("gridLayout")
        self.softButton = QRadioButton(parent=ResetHeadDialog)
        self.softButton.setAutoFillBackground(False)
        self.softButton.setText("&Soft")
        self.softButton.setObjectName("softButton")
        self.gridLayout.addWidget(self.softButton, 0, 0, 1, 1, Qt.AlignmentFlag.AlignTop)
        self.softHelp = QLabel(parent=ResetHeadDialog)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.softHelp.sizePolicy().hasHeightForWidth())
        self.softHelp.setSizePolicy(sizePolicy)
        self.softHelp.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignTop)
        self.softHelp.setWordWrap(True)
        self.softHelp.setObjectName("softHelp")
        self.gridLayout.addWidget(self.softHelp, 0, 1, 1, 1)
        self.buttonBox = QDialogButtonBox(parent=ResetHeadDialog)
        self.buttonBox.setOrientation(Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QDialogButtonBox.StandardButton.Cancel|QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 5, 0, 1, 2)
        self.hardButton = QRadioButton(parent=ResetHeadDialog)
        self.hardButton.setText("&Hard")
        self.hardButton.setObjectName("hardButton")
        self.gridLayout.addWidget(self.hardButton, 2, 0, 1, 1, Qt.AlignmentFlag.AlignTop)
        self.mixedHelp = QLabel(parent=ResetHeadDialog)
        self.mixedHelp.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignTop)
        self.mixedHelp.setWordWrap(True)
        self.mixedHelp.setObjectName("mixedHelp")
        self.gridLayout.addWidget(self.mixedHelp, 1, 1, 1, 1)
        self.hardHelp = QLabel(parent=ResetHeadDialog)
        self.hardHelp.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignTop)
        self.hardHelp.setWordWrap(True)
        self.hardHelp.setObjectName("hardHelp")
        self.gridLayout.addWidget(self.hardHelp, 2, 1, 1, 1)
        self.mixedButton = QRadioButton(parent=ResetHeadDialog)
        self.mixedButton.setText("&Mixed")
        self.mixedButton.setObjectName("mixedButton")
        self.gridLayout.addWidget(self.mixedButton, 1, 0, 1, 1, Qt.AlignmentFlag.AlignTop)
        self.recurseCheckBox = QCheckBox(parent=ResetHeadDialog)
        self.recurseCheckBox.setChecked(True)
        self.recurseCheckBox.setObjectName("recurseCheckBox")
        self.gridLayout.addWidget(self.recurseCheckBox, 3, 0, 1, 2)

        self.retranslateUi(ResetHeadDialog)
        self.buttonBox.accepted.connect(ResetHeadDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(ResetHeadDialog.reject) # type: ignore
        QMetaObject.connectSlotsByName(ResetHeadDialog)
        ResetHeadDialog.setTabOrder(self.softButton, self.mixedButton)
        ResetHeadDialog.setTabOrder(self.mixedButton, self.hardButton)

    def retranslateUi(self, ResetHeadDialog):
        ResetHeadDialog.setWindowTitle(_p("ResetHeadDialog", "Reset HEAD"))
        self.softHelp.setText(_p("ResetHeadDialog", "<b>Keep</b> all your files intact.\n"
"<br><b>Stage</b> any differences between your files and {commit}."))
        self.mixedHelp.setText(_p("ResetHeadDialog", "<b>Keep</b> all your files intact.\n"
"<br><b>Unstage</b> any differences between your files and {commit}."))
        self.hardHelp.setText(_p("ResetHeadDialog", "<b>Wipe</b> all your changes.\n"
"<br>End result identical to a fresh checkout of {commit}."))
        self.recurseCheckBox.setText(_p("ResetHeadDialog", "&Reset submodules recursively"))
